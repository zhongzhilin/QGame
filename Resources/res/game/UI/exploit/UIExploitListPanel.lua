--region UIExploitListPanel.lua
--Author : yyt
--Date   : 2017/11/13
--generate by [ui_code_tool.py] automatically

local resMgr = global.resMgr
local uiMgr = global.uiMgr
local luaCfg = global.luaCfg
-- do not edit code in this region!!!!
--REQUIRE_CLASS_BEGIN
--REQUIRE_CLASS_END

local UIExploitListPanel  = class("UIExploitListPanel", function() return gdisplay.newWidget() end )
local UITableView = require("game.UI.common.UITableView")
local UIExploitListCell = require("game.UI.exploit.UIExploitListCell")

function UIExploitListPanel:ctor()
    self:CreateUI()
end

function UIExploitListPanel:CreateUI()
    local root = resMgr:createWidget("exploit/exploit_show")
    self:initUI(root)
end

function UIExploitListPanel:initUI(root)
    self.root = root
    self:addChild(root)
    self.root:setContentSize(cc.size(gdisplay.width, gdisplay.height))
    ccui.Helper:doLayout(self.root)
    
    uiMgr:configUITree(self.root)
    uiMgr:configUILanguage(self.root, "exploit/exploit_show")

-- do not edit code in this region!!!!
--EXPORT_NODE_BEGIN
    self.title = self.root.title_export
    self.now = self.root.now_mlan_14_export
    self.icon = self.root.icon_export
    self.nowNum = self.root.nowNum_export
    self.bottomNode = self.root.bottomNode_export
    self.topNode = self.root.topNode_export
    self.node_tableView = self.root.node_tableView_export
    self.cellSize = self.root.cellSize_export
    self.tbSize = self.root.tbSize_export

--EXPORT_NODE_END
    uiMgr:addWidgetTouchHandler(self.title.esc, function(sender, eventType) self:exit_call(sender, eventType) end, nil, true)

    self.tableView = UITableView.new()
        :setSize(self.tbSize:getContentSize(), self.topNode, self.bottomNode)
        :setCellSize(self.cellSize:getContentSize())
        :setCellTemplate(UIExploitListCell)
        :setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN)
        :setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL)
        :setColumn(1)
    self.node_tableView:addChild(self.tableView)


    global.tools:adjustNodePos(self.now, self.nowNum)
end

--if the funcion doesn't exists, it will insert a blank func
--CALLBACK_FUNCS_BEGIN

function UIExploitListPanel:setData(data)
    local exploitLv = clone(luaCfg:exploit_lv())
    table.sort(exploitLv, function(s1, s2) return s1.exploitLV > s2.exploitLV end)
    self.tableView:setData(exploitLv)
    self.nowNum:setString(data.lTotalExploit)
end

function UIExploitListPanel:exit_call(sender, eventType)
    global.panelMgr:closePanelForBtn("UIExploitListPanel")
end


--CALLBACKS_FUNCS_END

return UIExploitListPanel

--endregion
