--region UIExploitUsePanel.lua
--Author : yyt
--Date   : 2017/11/13
--generate by [ui_code_tool.py] automatically

local resMgr = global.resMgr
local uiMgr = global.uiMgr
local luaCfg = global.luaCfg
-- do not edit code in this region!!!!
--REQUIRE_CLASS_BEGIN
local UIInputBox = require("game.UI.common.UIInputBox")
--REQUIRE_CLASS_END

local UIExploitUsePanel  = class("UIExploitUsePanel", function() return gdisplay.newWidget() end )

function UIExploitUsePanel:ctor()
    self:CreateUI()
end

function UIExploitUsePanel:CreateUI()
    local root = resMgr:createWidget("exploit/exploit_use")
    self:initUI(root)
end

function UIExploitUsePanel:initUI(root)
    self.root = root
    self:addChild(root)
    self.root:setContentSize(cc.size(gdisplay.width, gdisplay.height))
    ccui.Helper:doLayout(self.root)
    
    uiMgr:configUITree(self.root)
    uiMgr:configUILanguage(self.root, "exploit/exploit_use")

-- do not edit code in this region!!!!
--EXPORT_NODE_BEGIN
    self.Node = self.root.Node_export
    self.name = self.root.Node_export.title.name_export
    self.desc = self.root.Node_export.desc_export
    self.slider = self.root.Node_export.slider_export
    self.cur = UIInputBox.new()
    uiMgr:configNestClass(self.cur, self.root.Node_export.slider_export.cur)
    self.icon_bg = self.root.Node_export.icon_bg_export
    self.icon = self.root.Node_export.icon_export
    self.needExploit = self.root.Node_export.donate.needExploit_export

    uiMgr:addWidgetTouchHandler(self.root.Panel_1, function(sender, eventType) self:exit(sender, eventType) end)
    uiMgr:addWidgetTouchHandler(self.root.Node_export.donate, function(sender, eventType) self:onDonate(sender, eventType) end)
--EXPORT_NODE_END

    self.slider.cur = self.cur
    self.cur:setInputMode(cc.EDITBOX_INPUT_MODE_NUMERIC)

    local CountSliderControl = require("game.UI.common.UICountSliderControl")
    self.sliderControl = CountSliderControl.new(self.slider,function(count)
        -- body
        self.needExploit:setString(count*self.data.cost)
    end)

end

--if the funcion doesn't exists, it will insert a blank func
--CALLBACK_FUNCS_BEGIN
function UIExploitUsePanel:setData(data)

    self.data = data
    local itemData = luaCfg:get_item_by(data.itemId)
    if not itemData then
        itemData = luaCfg:get_equipment_by(data.itemId)
    end
    self.itemData = itemData
    self.name:setString(itemData.itemName or itemData.name)
    self.desc:setString(itemData.itemDes or itemData.des)
    global.panelMgr:setTextureForAsync(self.icon,itemData.itemIcon or itemData.icon, true)
    global.panelMgr:setTextureForAsync(self.icon_bg,string.format("icon/item/item_bg_0%d.png",itemData.quality),true)

    local exploitData = global.userData:getTagExploit()
    local maxCount = math.floor(exploitData.lCurExploit/data.cost)
    self.sliderControl:setMaxCount(maxCount)
end

function UIExploitUsePanel:exit(sender, eventType)
    global.panelMgr:closePanel("UIExploitUsePanel")
end

function UIExploitUsePanel:onDonate(sender, eventType)
    
    local count = self.sliderControl:getContentCount()
    global.itemApi:exploitAction(function (msg)
        global.tipsMgr:showWarning("exploit01", count, self.itemData.itemName or self.itemData.name)
        self:exit()
    end, 2, self.data.ID, count)

end
--CALLBACKS_FUNCS_END

return UIExploitUsePanel

--endregion
